{"version":3,"file":"static/js/304.f5c0ff6a.chunk.js","mappings":"sLAEaA,E,QAAYC,EAAAA,IAAH,mI,qECAf,IASMC,GAAQ,uCAERC,GAAS,yGAKTC,GAAS,mHAMTC,GAAU,2F,mBCfVC,EAAY,SAAC,GAAe,IAAD,MAEU,EAFtBC,EAAY,EAAZA,MACtBC,EAAY,IAChB,UAAID,EAAME,oBAAV,QAA0BF,EAAMG,kBAC9BF,GAAY,UAACD,EAAME,oBAAP,QAAuBF,EAAMG,gBAAgBC,MAAM,EAAG,IAGpE,OACE,iCACE,SAACT,EAAD,CACEU,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aACxCC,EAENC,IAAG,UAAER,EAAMS,sBAAR,QAA0BT,EAAMU,KACnCC,QAAQ,UAEV,UAACf,EAAD,YACE,SAACC,EAAD,oBAAYG,EAAMY,aAAlB,QAA2BZ,EAAMU,QACjC,SAACZ,EAAD,UAAaG,SAIpB,C,yKC3BOY,E,QAAWC,EAAAA,OAENC,GAAarB,EAAAA,EAAAA,GAAOsB,EAAAA,GAAPtB,CAAH,kDAIVuB,GAAWvB,EAAAA,EAAAA,GAAOD,EAAAA,EAAPC,CAAH,iIAKCmB,EAAOK,SAGhBC,EAAYzB,EAAAA,EAAAA,GAAH,6DAEXmB,EAAOO,aAGLC,EAAO3B,EAAAA,EAAAA,GAAH,6HAQJ4B,EAAO5B,EAAAA,EAAAA,GAAH,gZ,SC1BF,SAAS6B,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAY,GACTC,MAAK,SAAAC,GACJN,EAAUM,EAAKC,QAChB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,KAGD,UAAClB,EAAD,YACE,SAACE,EAAD,uHACA,SAACE,EAAD,UACGI,EAAOa,KAAI,SAAAC,GAAK,OACf,SAACjB,EAAD,WACE,SAACP,EAAD,CAAYyB,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMhB,GAAtD,UACE,SAAC5B,EAAA,EAAD,CAAWC,MAAOuC,OAFXA,EAAME,GADF,QAUxB,C,kMC9BKG,EAAW,+BACXC,EAAU,mCAEVf,EAAW,mCAAG,WAAOgB,GAAP,uFACOC,EAAAA,EAAAA,IAAA,UAChBH,EADgB,qCACqBC,EADrB,iBACqCC,IAF5C,cACVE,EADU,yBAITA,EAAShB,MAJA,2CAAH,sDAOXiB,EAAc,mCAAG,WAAOR,GAAP,uFACEM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,IAFhB,cACfG,EADe,yBAIdA,EAAShB,MAJK,2CAAH,sDAOdkB,EAAgB,mCAAG,WAAOT,GAAP,uFACAM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,4BACsBI,EADtB,YADA,cACjBG,EADiB,yBAIhBA,EAAShB,MAJO,2CAAH,sDAOhBmB,EAAa,mCAAG,WAAOV,GAAP,uFACGM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,4BACsBI,IAFzB,cACdG,EADc,yBAIbA,EAAShB,MAJI,2CAAH,sDAQboB,EAAW,mCAAG,WAAOC,GAAP,uFACKN,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCQ,EADhC,yBADL,cACZL,EADY,yBAIXA,EAAShB,MAJE,2CAAH,qD","sources":["components/Container/Container.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 16px;\n\n  @media (min-width: 1280px) {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`;\n","import styled from '@emotion/styled/macro';\n\nexport const MovieThumb = styled.div`\n  ${\n    '' /* border-radius: 5px;\n  overflow: hidden;\n  width: 200px;\n  height: 300px; */\n  }\n`;\n\nexport const MovieImg = styled.img``;\n\nexport const MovieInfo = styled.div`\n  padding: 6px;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const MovieName = styled.p`\n  text-align: center;\n  text-transform: uppercase;\n  color: black;\n`;\n\nexport const MovieDescr = styled.p`\n  text-align: center;\n  color: #ff6b08;\n`;\n","import {\n  MovieImg,\n  MovieInfo,\n  MovieName,\n  MovieDescr,\n} from 'components/MovieCard/MovieCard.styled';\nimport PropTypes from 'prop-types';\nimport imageplaceholder from 'images/noposter.jpg';\n\nexport const MovieCard = ({ movie }) => {\n  let movieYear = '';\n  if (movie.release_date ?? movie.first_air_date) {\n    movieYear = (movie.release_date ?? movie.first_air_date).slice(0, 4);\n  }\n\n  return (\n    <>\n      <MovieImg\n        src={\n          movie.poster_path\n            ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n            : imageplaceholder\n        }\n        alt={movie.original_title ?? movie.name}\n        loading=\"lazy\"\n      />\n      <MovieInfo>\n        <MovieName>{movie.title ?? movie.name}</MovieName>\n        <MovieDescr>{movieYear}</MovieDescr>\n      </MovieInfo>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { Container } from '../../components/Container/Container.jsx';\nimport { darkTheme } from '../../services/theme';\n\nconst { colors } = darkTheme;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const PageWrap = styled(Container)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 14px;\n  background-color: ${colors.bcgMain};\n`;\n\nexport const PageTitle = styled.h2`\n  text-align: center;\n  color: ${colors.textPrimary};\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  max-width: 200px;\n  background-color: white;\n  border-radius: 0px 0px 6px 6px;\n  transition: box-shadow 250ms linear, transform 250ms linear;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n\n  :hover,\n  :focus {\n    box-shadow: 0 0 8px rgba(200, 200, 200, 0.8);\n    transform: scale(1.05);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchTrends } from 'services/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { StyledLink, PageWrap, PageTitle, List, Item } from './Home.styled';\n\nexport default function Home() {\n  const [trends, setTrends] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchTrends(1)\n      .then(data => {\n        setTrends(data.results);\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  return (\n    <PageWrap>\n      <PageTitle>Популярні сьогодні</PageTitle>\n      <List>\n        {trends.map(trend => (\n          <Item key={trend.id}>\n            <StyledLink to={`/movies/${trend.id}`} state={{ from: location }}>\n              <MovieCard movie={trend} />\n            </StyledLink>\n          </Item>\n        ))}\n      </List>\n    </PageWrap>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '7944ae355bdc42ac579681e106149d6b';\n\nconst fetchTrends = async (page) => {\n    const response = await axios.get(\n        `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&page=${page}`\n    );\n    return response.data;\n};\n\nconst fetchMovieById = async (id) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n\nconst fetchMovies = async (query) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n  return response.data;\n};\n\n\n\n\n\nexport {\n  fetchTrends,\n  fetchMovieById,\n  fetchReviewsById,\n  fetchCastById,\n  fetchMovies,\n};"],"names":["Container","styled","MovieImg","MovieInfo","MovieName","MovieDescr","MovieCard","movie","movieYear","release_date","first_air_date","slice","src","poster_path","imageplaceholder","alt","original_title","name","loading","title","colors","darkTheme","StyledLink","NavLink","PageWrap","bcgMain","PageTitle","textPrimary","List","Item","Home","useState","trends","setTrends","location","useLocation","useEffect","fetchTrends","then","data","results","catch","error","console","log","map","trend","to","id","state","from","MAIN_URL","API_KEY","page","axios","response","fetchMovieById","fetchReviewsById","fetchCastById","fetchMovies","query"],"sourceRoot":""}