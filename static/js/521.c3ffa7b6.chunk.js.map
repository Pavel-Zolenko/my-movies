{"version":3,"file":"static/js/521.c3ffa7b6.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","services/formatRuntime.js","pages/MovieDetails/MovieDetails.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetalis.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 16px;\n\n  @media (min-width: 1280px) {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n`;\n","export const formatRuntimeEn = time => {\n  if (time) {\n    const hours = Math.floor(time / 60);\n    const min = time % 60;\n    const result = hours > 0 ? `${hours}h ${min}m` : `${min}m`;\n    return result;\n  }\n};\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { Container } from 'components/Container/Container';\nimport { darkTheme } from 'services/theme';\n\nconst { colors, shadows } = darkTheme;\n\nexport const PageContainer = styled(Container)``;\n\nexport const BackDrop = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 18px;\n  padding: 14px;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  background-image: linear-gradient(\n      to bottom,\n      rgba(59, 67, 81, 0.8),\n      ${colors.bcgMain} 80%\n    ),\n    url(${p => `https://image.tmdb.org/t/p/w1280${p.backdrop}`});\n\n  @media (min-width: 480px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Wrap = styled.div`\n  @media (min-width: 480px) {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    gap: 14px;\n  }\n`;\n\nexport const DetailsWrapp = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 18px;\n`;\n\nexport const DetailsBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  @media (min-width: 480px) {\n    align-items: flex-start;\n  }\n`;\n\nexport const DetailsText = styled.p`\n  text-align: center;\n  color: ${colors.textTitle};\n`;\nexport const DetailsTitle = styled.h1`\n  text-align: center;\n  font-size: 28px;\n  color: ${colors.textTitle};\n  width: 100%;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n\n  @media (min-width: 480px) {\n    justify-content: flex-start;\n  }\n`;\n\nexport const DetailsImg = styled.img`\n  @media (max-width: 479.8px) {\n    margin: 0 auto;\n  }\n  @media (max-width: 480px) {\n    text-align: left;\n  }\n`;\nexport const WrapText = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n`;\n\nexport const StyledLink = styled(Link)`\n  border-radius: 4px;\n  color: white;\n  background-color: grey;\n  padding: 8px;\n  text-decoration: none;\n  transition: box-shadow 200ms ease-in;\n\n  :hover {\n    box-shadow: ${shadows.blackShadow};\n  }\n`;\n","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from '@emotion/styled';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: #df4d4d;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport { fetchMovieById } from 'services/api';\nimport { ImStarHalf } from 'react-icons/im';\nimport imageplaceholder from 'images/noposter.jpg';\nimport { formatRuntimeEn } from 'services/formatRuntime';\nimport {\n  PageContainer,\n  DetailsWrapp,\n  DetailsBox,\n  ButtonContainer,\n  DetailsText,\n  DetailsTitle,\n  DetailsImg,\n  WrapText,\n  StyledLink,\n  BackDrop,\n  Wrap,\n} from './MovieDetails.styled';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport Loader from 'components/Loader/Loader';\n\nexport default function MovieDetails() {\n  const [movieItem, setMovieItem] = useState(null);\n  const params = useParams();\n  const { t } = useTranslation();\n  const lang = t('lang');\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    fetchMovieById(params.id, lang)\n      .then(data => {\n        setMovieItem(data);\n      })\n      .catch(error => console.log(error));\n  }, [params.id, lang]);\n\n  return (\n    <PageContainer>\n      <BackLink to={backLinkHref}>{t('buttons.back')}</BackLink>\n      {movieItem && (\n        <DetailsWrapp>\n          <BackDrop backdrop={movieItem?.backdrop_path}>\n            <DetailsTitle>{movieItem.title || movieItem.name}</DetailsTitle>\n            <Wrap>\n              <DetailsImg\n                width=\"200\"\n                src={\n                  movieItem.poster_path\n                    ? `https://image.tmdb.org/t/p/w200/${movieItem.poster_path}`\n                    : imageplaceholder\n                }\n                alt={`${movieItem.title || movieItem.name}`}\n              />\n              <DetailsBox>\n                <DetailsText>\n                  {(movieItem.release_date ?? movieItem.first_air_date).slice(\n                    0,\n                    4\n                  )}\n                </DetailsText>\n                <DetailsText>\n                  {movieItem.genres.map(genre => genre.name).join(', ')}\n                </DetailsText>\n                <DetailsText>{formatRuntimeEn(movieItem.runtime)}</DetailsText>\n                <DetailsText>\n                  {movieItem.vote_average > 0 && (\n                    <WrapText>\n                      <ImStarHalf />\n                      {movieItem.vote_average.toFixed(1)}\n                      /10\n                    </WrapText>\n                  )}\n                </DetailsText>\n\n                <ButtonContainer>\n                  <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n                    {t('buttons.cast')}\n                  </StyledLink>\n                  <StyledLink to=\"reviews\" state={{ from: backLinkHref }}>\n                    {t('buttons.reviews')}\n                  </StyledLink>\n                  <StyledLink to=\"trailer\" state={{ from: backLinkHref }}>\n                    {t('buttons.trailer')}\n                  </StyledLink>\n                </ButtonContainer>\n              </DetailsBox>\n            </Wrap>\n          </BackDrop>\n\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </DetailsWrapp>\n      )}\n    </PageContainer>\n  );\n}\n","import axios from 'axios';\n\nconst MAIN_URL = process.env.REACT_APP_MAIN_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst fetchTrends = async (page, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/trending/all/day?api_key=${API_KEY}&language=${lang}&page=${page}`\n  );\n  return response.data;\n};\n\nconst fetchMovieById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchReviewsById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=${lang}&page=1`\n  );\n  return response.data;\n};\n\nconst fetchCastById = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/credits?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchMovieTrailer = async (id, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/movie/${id}/videos?api_key=${API_KEY}&language=${lang}`\n  );\n  return response.data;\n};\n\nconst fetchMovies = async (query, lang) => {\n  const response = await axios.get(\n    `${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=${lang}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrends,\n  fetchMovieById,\n  fetchReviewsById,\n  fetchCastById,\n  fetchMovieTrailer,\n  fetchMovies,\n};\n"],"names":["Container","styled","formatRuntimeEn","time","hours","Math","floor","min","colors","darkTheme","shadows","PageContainer","BackDrop","bcgMain","p","backdrop","Wrap","DetailsWrapp","DetailsBox","DetailsText","textTitle","DetailsTitle","ButtonContainer","DetailsImg","WrapText","StyledLink","Link","blackShadow","BackLink","to","children","size","MovieDetails","useState","movieItem","setMovieItem","params","useParams","t","useTranslation","lang","backLinkHref","useLocation","state","from","useEffect","fetchMovieById","id","then","data","catch","error","console","log","backdrop_path","title","name","width","src","poster_path","imageplaceholder","alt","release_date","first_air_date","slice","genres","map","genre","join","runtime","vote_average","toFixed","Suspense","fallback","Loader","MAIN_URL","process","API_KEY","fetchTrends","page","axios","response","fetchReviewsById","fetchCastById","fetchMovieTrailer","fetchMovies","query"],"sourceRoot":""}